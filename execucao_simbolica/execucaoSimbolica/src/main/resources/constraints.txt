leq ( { A [-1, 10], 0 } )gt ( { A [-1, 10], 0 } )leq ( { B [-1, 10], 0 } )gt ( { A [-1, 10], 0 } )gt ( { B [-1, 10], 0 } )leq ( { C [-1, 10], 0 } )gt ( { A [-1, 10], 0 } )gt ( { B [-1, 10], 0 } )gt ( { C [-1, 10], 0 } )gt ( { A [-1, 10], INTEGER_EXPRESSION{ B [-1, 10], C [-1, 10] } } )gt ( { A [-1, 10], 0 } )gt ( { B [-1, 10], 0 } )gt ( { C [-1, 10], 0 } )leq ( { A [-1, 10], INTEGER_EXPRESSION{ B [-1, 10], C [-1, 10] } } )gt ( { B [-1, 10], INTEGER_EXPRESSION{ A [-1, 10], C [-1, 10] } } )gt ( { A [-1, 10], 0 } )gt ( { B [-1, 10], 0 } )gt ( { C [-1, 10], 0 } )leq ( { A [-1, 10], INTEGER_EXPRESSION{ B [-1, 10], C [-1, 10] } } )leq ( { B [-1, 10], INTEGER_EXPRESSION{ A [-1, 10], C [-1, 10] } } )gt ( { C [-1, 10], INTEGER_EXPRESSION{ A [-1, 10], B [-1, 10] } } )gt ( { A [-1, 10], 0 } )gt ( { B [-1, 10], 0 } )gt ( { C [-1, 10], 0 } )leq ( { A [-1, 10], INTEGER_EXPRESSION{ B [-1, 10], C [-1, 10] } } )leq ( { B [-1, 10], INTEGER_EXPRESSION{ A [-1, 10], C [-1, 10] } } )leq ( { C [-1, 10], INTEGER_EXPRESSION{ A [-1, 10], B [-1, 10] } } )eq ( { A [-1, 10], B [-1, 10] } )eq ( { B [-1, 10], C [-1, 10] } )gt ( { A [-1, 10], 0 } )gt ( { B [-1, 10], 0 } )gt ( { C [-1, 10], 0 } )leq ( { A [-1, 10], INTEGER_EXPRESSION{ B [-1, 10], C [-1, 10] } } )leq ( { B [-1, 10], INTEGER_EXPRESSION{ A [-1, 10], C [-1, 10] } } )leq ( { C [-1, 10], INTEGER_EXPRESSION{ A [-1, 10], B [-1, 10] } } )eq ( { A [-1, 10], B [-1, 10] } )neq ( { B [-1, 10], C [-1, 10] } )gt ( { A [-1, 10], 0 } )gt ( { B [-1, 10], 0 } )gt ( { C [-1, 10], 0 } )leq ( { A [-1, 10], INTEGER_EXPRESSION{ B [-1, 10], C [-1, 10] } } )leq ( { B [-1, 10], INTEGER_EXPRESSION{ A [-1, 10], C [-1, 10] } } )leq ( { C [-1, 10], INTEGER_EXPRESSION{ A [-1, 10], B [-1, 10] } } )neq ( { A [-1, 10], B [-1, 10] } )eq ( { B [-1, 10], C [-1, 10] } )gt ( { A [-1, 10], 0 } )gt ( { B [-1, 10], 0 } )gt ( { C [-1, 10], 0 } )leq ( { A [-1, 10], INTEGER_EXPRESSION{ B [-1, 10], C [-1, 10] } } )leq ( { B [-1, 10], INTEGER_EXPRESSION{ A [-1, 10], C [-1, 10] } } )leq ( { C [-1, 10], INTEGER_EXPRESSION{ A [-1, 10], B [-1, 10] } } )neq ( { A [-1, 10], B [-1, 10] } )neq ( { B [-1, 10], C [-1, 10] } )eq ( { A [-1, 10], C [-1, 10] } )gt ( { A [-1, 10], 0 } )gt ( { B [-1, 10], 0 } )gt ( { C [-1, 10], 0 } )leq ( { A [-1, 10], INTEGER_EXPRESSION{ B [-1, 10], C [-1, 10] } } )leq ( { B [-1, 10], INTEGER_EXPRESSION{ A [-1, 10], C [-1, 10] } } )leq ( { C [-1, 10], INTEGER_EXPRESSION{ A [-1, 10], B [-1, 10] } } )neq ( { A [-1, 10], B [-1, 10] } )neq ( { B [-1, 10], C [-1, 10] } )neq ( { A [-1, 10], C [-1, 10] } )gt ( { A [-1, 10], 0 } )gt ( { B [-1, 10], 0 } )gt ( { C [-1, 10], 0 } )leq ( { A [-1, 10], INTEGER_EXPRESSION{ B [-1, 10], C [-1, 10] } } )leq ( { B [-1, 10], INTEGER_EXPRESSION{ A [-1, 10], C [-1, 10] } } )gt ( { C [-1, 10], INTEGER_EXPRESSION{ A [-1, 10], B [-1, 10] } } )eq ( { A [-1, 10], B [-1, 10] } )eq ( { B [-1, 10], C [-1, 10] } )